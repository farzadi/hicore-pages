(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{274:function(e,t,a){e.exports=a.p+"assets/img/matchModes.58e2b365.png"},275:function(e,t,a){e.exports=a.p+"assets/img/matchRules.0e735749.png"},276:function(e,t,a){e.exports=a.p+"assets/img/statics.f39bb6b8.png"},277:function(e,t,a){e.exports=a.p+"assets/img/columnName.7c606c70.png"},278:function(e,t,a){e.exports=a.p+"assets/img/columnType.aa0936a0.png"},279:function(e,t,a){e.exports=a.p+"assets/img/userProgress.9096331d.png"},291:function(e,t,a){"use strict";a.r(t);var s=a(10),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"game-controller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#game-controller"}},[e._v("#")]),e._v(" Game Controller")]),e._v(" "),t("p",[e._v("With the dashboard, we can control everything we need in our game. Such as "),t("strong",[e._v("Match Modes")]),e._v(", "),t("strong",[e._v("Match Rules")]),e._v(", "),t("strong",[e._v("Statics")]),e._v(", "),t("strong",[e._v("User Progress")]),e._v(". So we need to add some parameters to control how many modes we have in our game, how matches should end, how user progress should be updated, and we can create collections with statics feature to save data such as weapons, shop items, characters, and whatever we want to have in our game.")]),e._v(" "),t("h2",{attrs:{id:"match-modes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#match-modes"}},[e._v("#")]),e._v(" Match Modes")]),e._v(" "),t("p",[e._v("We can add as many match modes as we want. We use these modes to add match rules and in matchmaking. To add a new mode click on "),t("strong",[e._v("ADD MODE")]),e._v(" and then enter the mode name and then click on the Save button. To remove the mode check that mode and then click on "),t("strong",[e._v("REMOVE MODE")])]),e._v(" "),t("img",{attrs:{src:a(274),alt:"Match modes",width:"500"}}),e._v(" "),t("h2",{attrs:{id:"match-rules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#match-rules"}},[e._v("#")]),e._v(" Match Rules")]),e._v(" "),t("p",[e._v("We use rules to determine how matches should end in each match mode. To do that click on "),t("strong",[e._v("ADD RULE")]),e._v(" and then from match mode dropdown chose what mode you want to add a rule for it and then enter a key and value you want to match ended with that and then click on the Save button. For removing the rule check that rule and then click on "),t("strong",[e._v("REMOVE RULE")])]),e._v(" "),t("img",{attrs:{src:a(275),alt:"Match rules"}}),e._v(" "),t("h2",{attrs:{id:"statics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#statics"}},[e._v("#")]),e._v(" Statics")]),e._v(" "),t("p",[e._v("We can have whatever we want in our game for example here we created weapons class and saved weapons and there properties that we want to have in our game")]),e._v(" "),t("img",{attrs:{src:a(276),alt:"Statics"}}),e._v(" "),t("h3",{attrs:{id:"step-1-create-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-create-class"}},[e._v("#")]),e._v(" Step 1: Create Class")]),e._v(" "),t("p",[e._v("First we need create a class by clicking on "),t("strong",[e._v("CREATE CLASS")]),e._v(" and then we should enter the class name we want to create and click on Save button. After adding the class we can switch between classes from dropdown.")]),e._v(" "),t("h3",{attrs:{id:"step-2-create-column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-create-column"}},[e._v("#")]),e._v(" Step 2: Create Column")]),e._v(" "),t("p",[e._v("After we add some classes we should add the column name to that class to save our values. For doing that click on "),t("strong",[e._v("ADD COLUMN")]),e._v(" and then enter column name and in the next step you should choose the type of that column")]),e._v(" "),t("p",[t("img",{attrs:{src:a(277),alt:"Column name",width:"300"}}),t("img",{attrs:{src:a(278),alt:"Column type",width:"300"}})]),e._v(" "),t("h3",{attrs:{id:"step-3-create-row"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-create-row"}},[e._v("#")]),e._v(" Step 3: Create Row")]),e._v(" "),t("p",[e._v("After we add columns we can create as many rows as we want by clicking on "),t("strong",[e._v("ADD ROW")]),e._v(" for storing our data in the database.")]),e._v(" "),t("h2",{attrs:{id:"user-progress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-progress"}},[e._v("#")]),e._v(" User Progress")]),e._v(" "),t("p",[e._v("To determine how users should get levels and ranks we need to specify the range for them. We use XP for level up and skill for rank. For example, we specified a range between 0 and 100 for level 1 and if the user sends 20 XPs to the server, the server will return level 1 and stores that level in the database. You can switch between level and rank from the dropdown and do the same for rank. To add new xp range, click on "),t("strong",[e._v("ADD XP RANGE")]),e._v(" or for skill click on "),t("strong",[e._v("ADD SKILL RANGE")]),e._v(". To remove the ranges check them and click on "),t("strong",[e._v("REMOVE * RANGE")])]),e._v(" "),t("img",{attrs:{src:a(279),alt:"User progress"}}),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("If you want to add another range, the "),t("code",[e._v("xpFrom")]),e._v(" or "),t("code",[e._v("skillFrom")]),e._v(" property must start from the previous value")])])])}),[],!1,null,null,null);t.default=r.exports}}]);